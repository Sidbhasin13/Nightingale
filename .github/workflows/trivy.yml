name: Trivy Scan

on:
  push:
    branches: ["debug-trivy-scan-issue"]
    paths:
      - ".github/workflows/trivy.yml"
  pull_request:
    branches: ["debug-trivy-scan-issue"]
    paths:
      - ".github/workflows/trivy.yml"

permissions:
  contents: read
  security-events: write

jobs:
  scan:
    name: Run Trivy Scan and Generate SBOM
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - "ghcr.io/rajanagori/nightingale:stable"
          - "ghcr.io/rajanagori/nightingale:arm64"

    steps:
      - name: Install Trivy
        run: |
          echo "Installing Trivy..."
          wget https://github.com/aquasecurity/trivy/releases/download/v0.57.0/trivy_0.57.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.57.0_Linux-64bit.deb
          rm trivy_0.57.0_Linux-64bit.deb

      - name: Cache Trivy DB
        uses: actions/cache@v3
        with:
          path: ~/.cache/trivy/db
          key: ${{ runner.os }}-trivy-db-${{ matrix.image }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-trivy-db-${{ matrix.image }}-

      - name: Refresh Trivy DB if necessary
        run: |
          echo "Checking if Trivy vulnerability database needs to be refreshed..."
          DB_PATH=~/.cache/trivy/db
          if [[ ! -f "$DB_PATH" ]] || [[ $(find $DB_PATH -mmin +60) ]]; then
            echo "Refreshing Trivy vulnerability database..."
            trivy image --download-db-only
          else
            echo "Trivy DB is up-to-date, no need to refresh."
          fi

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set Image Name for Upload
        id: set_image_name
        run: echo "IMAGE_NAME=$(echo '${{ matrix.image }}' | sed 's/[^a-zA-Z0-9]/_/g')" >> $GITHUB_ENV

      - name: Run Trivy Vulnerability Scanner
        run: |
          IMAGE_NAME=$(echo "${{ matrix.image }}" | sed 's/[^a-zA-Z0-9]/_/g')
          echo "Scanning ${{ matrix.image }}..."
          mkdir -p artifacts

          # Detect if the image is ARM64 or not
          if [[ "${{ matrix.image }}" == *":arm64" ]]; then
            PLATFORM_FLAG="--platform linux/arm64"
          else
            PLATFORM_FLAG=""
          fi

          echo "Using PLATFORM_FLAG: $PLATFORM_FLAG"

          # Trivy scan for vulnerabilities (SARIF output)
          trivy image $PLATFORM_FLAG \
            --format sarif \
            --scanners vuln \
            --severity CRITICAL,MEDIUM \
            --timeout 60m \
            --output artifacts/trivy-results-${IMAGE_NAME}.sarif \
            ${{ matrix.image }}

          # Trivy scan for SBOM (CycloneDX format)
          trivy image $PLATFORM_FLAG \
            --format cyclonedx \
            --scanners vuln \
            --severity CRITICAL,MEDIUM \
            --timeout 60m \
            --output artifacts/sbom-${IMAGE_NAME}.cyclonedx.json \
            ${{ matrix.image }}

          echo "Verifying files in artifacts directory..."
          ls -al artifacts/

          if [[ ! -f "artifacts/trivy-results-${IMAGE_NAME}.sarif" ]]; then
            echo "Error: SARIF file was not created."
            exit 1
          fi

          if [[ ! -f "artifacts/sbom-${IMAGE_NAME}.cyclonedx.json" ]]; then
            echo "Error: JSON SBOM file was not created."
            exit 1
          fi

      - name: Upload SARIF file to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: artifacts/trivy-results-${{ env.IMAGE_NAME }}.sarif

      - name: Upload SBOM Files to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sbom-files-${{ github.run_id }}-${{ github.run_attempt }}
          path: artifacts/*.cyclonedx.json
